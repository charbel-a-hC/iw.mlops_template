name: push repository
on: 
  push:
    branches-ignore:
      - master
      - develop

env:
  PYTHON_VERSION: "3.9"
  POETRY_VERSION: "1.1.15"
  POETRY_URL: https://install.python-poetry.org
  POETRY_VIRTUALENVS_CREATE: false

jobs: 
  push_workflow:
    runs-on: ubuntu-latest
    steps:
        - name: Checkout repository
          uses: actions/checkout@v2 
 
        - name: Set up Python ${{ env.PYTHON_VERSION }}
          uses: actions/setup-python@v4
          with:
            python-version: ${{ env.PYTHON_VERSION }}
          id: setup_python
        # Poetry cache depends on OS, Python version and Poetry version.
        - name: Cache Poetry cache
          uses: actions/cache@v3
          with:
            path: ~/.cache/pypoetry
            key: poetry-cache-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.POETRY_VERSION }}
        # virtualenv cache should depends on OS, Python version and `poetry.lock` (and optionally workflow files).
        - name: Cache Packages
          uses: actions/cache@v3
          with:
            path: ~/.local
            key: poetry-local-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}
        - name: Install Poetry ${{ env.POETRY_VERSION }}
          run: |
            curl -sSL ${{ env.POETRY_URL }} | python - --version ${{ env.POETRY_VERSION }}
            echo "$HOME/.local/bin" >> $GITHUB_PATH
        - name: Install Dependencies
          run: poetry install

        # Ignored import errors through E0401 disable
        - name: Run Pylint and fail if rating is less than 1/10
          run: |
            find . \( -type d -name 'sample_main' -o -type d -name '.venv' \) -prune -o -type f -name '*.py' -print | xargs pylint --disable=E0401 --fail-under=1.0

        - name: Run pytest
          run: pytest  
        
        - name: Login to wandb
          run: python3 mlops_utils/wandb_login.py --wandb_api_key=${{ secrets.WANDB_API_KEY }}

        - name: Check metrics if over average
          run: python3 mlops_utils/push_metrics.py --readme_path=README.md --metric=0.7 

        # - name: Set environment variable
        #   run: echo "NEW_LINE_CONTENT=Your new line content here" >> $GITHUB_ENV

        # - name: Build and push Docker image
        #   uses: docker/build-push-action@v2
        #   with:
        #     context: .  # Path to the directory containing your Dockerfile (the current directory in this case)
        #     push: false  # Set to 'false' if you only want to build the image and not push it
        #testingg dependencies

        